@using HabitHook.HabitManagement.Client.Habit.AddHabit;
@using HabitHook.HabitManagement.Domain.Contracts.Habits.ListHabits
@using HabitHook.HabitManagement.Client.Habit.DeleteHabit
@inject IMediator Mediator

<PageTitle>Lista nawyk√≥w</PageTitle>

<table class="table">
  <thead>
  <tr>
    <th scope="col">Nazwa nawyku</th>
    <th></th>
  </tr>
  </thead>
  <tbody>
  @if (_habits is not null)
  {
    @foreach (var habit in _habits)
    {
      <tr>
        <td>
          <NavLink class="link-dark" 
                   href=@($"/habit/{habit.Id}")>@habit.Name</NavLink>
        </td>
        <td><DeleteHabitButton Habit="habit"/></td>
      </tr>
    }
  }
  </tbody>
</table>
<AddHabitRow OnHabitCreatedAsync="LoadHabits"/>

@code
{
  private List<HabitDto>? _habits;

  private async Task LoadHabits()
  {
    var response = await Mediator.Send(new ListHabitsQuery(new ListHabitsQueryDto()));
    _habits = response.ToList();
  }
  
  protected override async Task OnInitializedAsync()
  {
    await LoadHabits();
  }
}
